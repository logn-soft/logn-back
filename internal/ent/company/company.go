// Code generated by ent, DO NOT EDIT.

package company

import (
	"time"
)

const (
	// Label holds the string label denoting the company type in the database.
	Label = "company"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmploy holds the string denoting the employ field in the database.
	FieldEmploy = "employ"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeSocials holds the string denoting the socials edge name in mutations.
	EdgeSocials = "socials"
	// EdgeRoles holds the string denoting the roles edge name in mutations.
	EdgeRoles = "roles"
	// EdgeVacancies holds the string denoting the vacancies edge name in mutations.
	EdgeVacancies = "vacancies"
	// EdgeAreas holds the string denoting the areas edge name in mutations.
	EdgeAreas = "areas"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeCommunities holds the string denoting the communities edge name in mutations.
	EdgeCommunities = "communities"
	// Table holds the table name of the company in the database.
	Table = "companies"
	// SocialsTable is the table that holds the socials relation/edge. The primary key declared below.
	SocialsTable = "social_companies"
	// SocialsInverseTable is the table name for the Social entity.
	// It exists in this package in order to avoid circular dependency with the "social" package.
	SocialsInverseTable = "socials"
	// RolesTable is the table that holds the roles relation/edge. The primary key declared below.
	RolesTable = "role_companies"
	// RolesInverseTable is the table name for the Role entity.
	// It exists in this package in order to avoid circular dependency with the "role" package.
	RolesInverseTable = "roles"
	// VacanciesTable is the table that holds the vacancies relation/edge. The primary key declared below.
	VacanciesTable = "vacancy_companies"
	// VacanciesInverseTable is the table name for the Vacancy entity.
	// It exists in this package in order to avoid circular dependency with the "vacancy" package.
	VacanciesInverseTable = "vacancies"
	// AreasTable is the table that holds the areas relation/edge. The primary key declared below.
	AreasTable = "area_companies"
	// AreasInverseTable is the table name for the Area entity.
	// It exists in this package in order to avoid circular dependency with the "area" package.
	AreasInverseTable = "areas"
	// UsersTable is the table that holds the users relation/edge. The primary key declared below.
	UsersTable = "company_users"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// CommunitiesTable is the table that holds the communities relation/edge. The primary key declared below.
	CommunitiesTable = "company_communities"
	// CommunitiesInverseTable is the table name for the Community entity.
	// It exists in this package in order to avoid circular dependency with the "community" package.
	CommunitiesInverseTable = "communities"
)

// Columns holds all SQL columns for company fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEmploy,
	FieldCreatedAt,
}

var (
	// SocialsPrimaryKey and SocialsColumn2 are the table columns denoting the
	// primary key for the socials relation (M2M).
	SocialsPrimaryKey = []string{"social_id", "company_id"}
	// RolesPrimaryKey and RolesColumn2 are the table columns denoting the
	// primary key for the roles relation (M2M).
	RolesPrimaryKey = []string{"role_id", "company_id"}
	// VacanciesPrimaryKey and VacanciesColumn2 are the table columns denoting the
	// primary key for the vacancies relation (M2M).
	VacanciesPrimaryKey = []string{"vacancy_id", "company_id"}
	// AreasPrimaryKey and AreasColumn2 are the table columns denoting the
	// primary key for the areas relation (M2M).
	AreasPrimaryKey = []string{"area_id", "company_id"}
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"company_id", "user_id"}
	// CommunitiesPrimaryKey and CommunitiesColumn2 are the table columns denoting the
	// primary key for the communities relation (M2M).
	CommunitiesPrimaryKey = []string{"company_id", "community_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// EmployValidator is a validator for the "employ" field. It is called by the builders before save.
	EmployValidator func(int) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
